[
{ "_id" : { "$oid" : "5b6756b15f627d61f17aea2c" }, "plugin" : "issueSHARK_1.01", "collections" : [ { "fields" : [ { "logical_type" : "OID", "type" : "ObjectIdType", "field_name" : "_id", "desc" : "Identifier of the document" }, { "desc" : "ObjectID of the project to which this issue system belongs", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "project_id", "reference_to" : "project" }, { "logical_type" : "URL", "type" : "StringType", "field_name" : "url", "desc" : "URL of the issue system (e.g. https://issues.apache.org/jira/rest/api/2/search?jql=project=ZOOKEEPER, https://bz.apache.org/bugzilla/rest.cgi/bug?product=Ant, https://api.github.com/repos/composer/composer/issues)" }, { "logical_type" : "Date", "type" : "DateType", "field_name" : "last_updated", "desc" : "Date on which data was gathered the last time from this issue system" } ], "desc" : "Issue system of the project (e.g. JIRA, Bugzilla)", "collection_name" : "issue_system" }, { "fields" : [ { "logical_type" : "OID", "type" : "ObjectIdType", "field_name" : "_id", "desc" : "Identifier of the document" }, { "logical_type" : "Other", "type" : "StringType", "field_name" : "email", "desc" : "Email address of the person" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "name", "desc" : "Name of the person" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "username", "desc" : "Username of the person" } ], "desc" : "This collection contains all persons that worked within the project (e.g., contributing a commit)", "collection_name" : "people" }, { "fields" : [ { "logical_type" : "OID", "type" : "ObjectIdType", "field_name" : "_id", "desc" : "Identifier of the document" }, { "desc" : "ObjectID that links to the issue system to which this issue belongs", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "issue_system_id", "reference_to" : "issue_system" }, { "logical_type" : "ID", "type" : "StringType", "field_name" : "external_id", "desc" : "ExternalID of the issue that was given to it from the original issue tracking system" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "title", "desc" : "Title of the issue" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "desc", "desc" : "Description of the issue" }, { "logical_type" : "Date", "type" : "DateType", "field_name" : "created_at", "desc" : "Date on which the issue was created" }, { "logical_type" : "Date", "type" : "DateType", "field_name" : "updated_at", "desc" : "Date on which the issue was updated" }, { "desc" : "ObjectID that links to an entry in the people collection, which is the creator of the issue", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "creator_id", "reference_to" : "people" }, { "desc" : "ObjectID that links to an entry in the people collection, which is the reporter of the issue", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "reporter_id", "reference_to" : "people" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "issue_type", "desc" : "Issue type (e.g. Bug, Enhancement, etc.)" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "priority", "desc" : "Priority of the issue (e.g., major, minor)" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "status", "desc" : "Status of the issue (e.g. RESOLVED, NEW)" }, { "logical_type" : "Name", "type" : "ArrayType", "field_name" : "affects_versions", "sub_type" : "StringType", "desc" : "List of versions that are affected by this issue" }, { "logical_type" : "Name", "type" : "ArrayType", "field_name" : "components", "sub_type" : "StringType", "desc" : "List of components that are affected by this issue" }, { "logical_type" : "Name", "type" : "ArrayType", "field_name" : "labels", "sub_type" : "StringType", "desc" : "List of labels with which this issue is labled" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "resolution", "desc" : "Resolution of the issue (if available)" }, { "logical_type" : "Name", "type" : "ArrayType", "field_name" : "fix_versions", "sub_type" : "StringType", "desc" : "List of versions with which the issue was fixed" }, { "desc" : "ObjectID that links to an entry in the people collection, which is the assignee of the issue", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "assignee_id", "reference_to" : "people" }, { "logical_type" : "Name", "type" : "ArrayType", "field_name" : "issue_links", "fields" : [ { "desc" : "ObjectID to which the issue links", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "issue_id", "reference_to" : "issue" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "type", "desc" : "Type of the issue link (e.g. duplicate)" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "effect", "desc" : "Effect of the issue link (e.g., is duplicate of)" } ], "desc" : "Object of an issue link that includes more information about the link to another issue.", "sub_type" : "StructType" }, { "desc" : "ObjectID that links to a parent issue (if available)", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "parent_issue_id", "reference_to" : "issue" }, { "logical_type" : "Name", "type" : "IntegerType", "field_name" : "original_time_estimate", "desc" : "Original estimation of the needed time to fix the issue (if available)" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "environment", "desc" : "Environment which is affected by the issue" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "platform", "desc" : "Platform which is affected by the issue (e.g. Windows)" } ], "desc" : "This collection stores the original issues. Meaning, that this collection holds all information that was originally added to the first report of the issue", "collection_name" : "issue" }, { "fields" : [ { "logical_type" : "OID", "type" : "ObjectIdType", "field_name" : "_id", "desc" : "Identifier of the document" }, { "logical_type" : "ID", "type" : "IntegerType", "field_name" : "external_id", "desc" : "ExternalID of the issue that was given to it from the original issue tracking system" }, { "desc" : "ObjectID of the issue to which this comment belongs", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "issue_id", "reference_to" : "issue" }, { "desc" : "ObjectID that links to an entry in the people collection, which is the author of this comment", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "author_id", "reference_to" : "people" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "comment", "desc" : "Actual comment body" }, { "logical_type" : "Date", "type" : "DateType", "field_name" : "created_at", "desc" : "Date on which the comment was created" } ], "desc" : "This collection holds all comments to all issues", "collection_name" : "issue_comment" }, { "fields" : [ { "logical_type" : "OID", "type" : "ObjectIdType", "field_name" : "_id", "desc" : "Identifier of the document" }, { "logical_type" : "ID", "type" : "StringType", "field_name" : "external_id", "desc" : "ExternalID of the issue that was given to it from the original issue tracking system" }, { "desc" : "ObjectID of the issue to which this event belongs", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "issue_id", "reference_to" : "issue" }, { "logical_type" : "Date", "type" : "DateType", "field_name" : "created_at", "desc" : "Date on which this event took place" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "status", "desc" : "Status of the event. E.g., 'title' means, that the title of the issue was changed" }, { "desc" : "ObjectID that links to an entry in the people collection, which is the author of this event", "logical_type" : "RID", "type" : "ObjectIdType", "field_name" : "author_id", "reference_to" : "people" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "old_value", "desc" : "Old value of the issue at this time of the changed field" }, { "logical_type" : "Name", "type" : "StringType", "field_name" : "new_value", "desc" : "New value of the issue after the event" } ], "desc" : "This collection contains all events on all issues that were collected. An event is an action like the changing of a title or similar", "collection_name" : "event" } ] },
{ "_id" : { "$oid" : "5b7d48375f627d65cf76930d" }, "plugin" : "vcsSHARK_0.12", "collections" : [ { "collection_name" : "commit", "desc" : "Information about the different commits of a project are stored in this collection", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "reference_to" : "vcs_system", "field_name" : "vcs_system_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID of the vcs_system to which this commits link" }, { "field_name" : "revision_hash", "type" : "StringType", "logical_type" : "Hash", "desc" : "Hash of the commit (e.g., SHA-Hash of github commit)" }, { "field_name" : "branches", "type" : "ArrayType", "sub_type" : "StringType", "desc" : "All branches to which this commits belong (same representation as on github)", "logical_type" : "ProductMetric" }, { "field_name" : "parents", "type" : "ArrayType", "sub_type" : "StringType", "desc" : "Hashes of the commits, that are parents of the commit at hand", "logical_type" : "ID" }, { "reference_to" : "people", "field_name" : "author_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID of the author of the commit. Author is the person that originally wrote the code that is committed" }, { "field_name" : "author_date", "type" : "DateType", "logical_type" : "Date", "desc" : "Date at which the author of the commit wrote the code" }, { "field_name" : "author_date_offset", "type" : "IntegerType", "logical_type" : "Offset", "desc" : "Time offset (time zone) in which the author was when he committed the code" }, { "reference_to" : "people", "field_name" : "committer_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID of the committer of the commit. Committer is the person that last applied the commit" }, { "field_name" : "committer_date", "type" : "DateType", "logical_type" : "Date", "desc" : "Date at which the committer of the commit committed the code" }, { "field_name" : "committer_date_offset", "type" : "IntegerType", "logical_type" : "Offset", "desc" : "Time offset (time zone) in which the committer was when he committed the code" }, { "field_name" : "message", "type" : "StringType", "logical_type" : "Text", "desc" : "Message that was attached to the commit" } ] }, { "collection_name" : "file", "desc" : "Information about the files within an VCS system is stored in this collection", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "reference_to" : "vcs_system", "field_name" : "vcs_system_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID of the vcs_system to which this file belongs" }, { "field_name" : "path", "type" : "StringType", "logical_type" : "Location", "desc" : "Path of the file (e.g. pyvcsshark/parser/gitparser.py)" } ] }, { "collection_name" : "file_action", "desc" : "This collection includes all information about the different actions that were done on the files in the repository", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "reference_to" : "commit", "field_name" : "commit_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID that links to the commit, to which this action belongs" }, { "reference_to" : "file", "field_name" : "file_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID of the file that was modified/deleted/added within this action" }, { "field_name" : "mode", "type" : "StringType", "logical_type" : "Other", "desc" : "Mode of the file change (A=added, D=deleted, M=modified, C=copy-edit, R=rename-edit, U=unmerged)" }, { "field_name" : "size_at_commit", "type" : "IntegerType", "logical_type" : "ProductMetric", "desc" : "Site of the file at the commit" }, { "field_name" : "lines_added", "type" : "IntegerType", "logical_type" : "ProcessMetric", "desc" : "Number of lines added" }, { "field_name" : "lines_deleted", "type" : "IntegerType", "logical_type" : "ProcessMetric", "desc" : "Number of lines deleted" }, { "field_name" : "is_binary", "type" : "BooleanType", "logical_type" : "Other", "desc" : "Marker if the file is a binary file" }, { "reference_to" : "file", "field_name" : "old_file_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "If the file was copied or renamed, this ObjectID will link to the old file id (i.e., the old path)" } ] }, { "collection_name" : "hunk", "desc" : "This collection contains all hunks that were created during the changing of files in the repository. All hunks follow the unified diff format (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "reference_to" : "file_action", "field_name" : "file_action_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID that links to the corresponding file action" }, { "field_name" : "new_start", "type" : "IntegerType", "logical_type" : "ProductMetric", "desc" : "Number that gives the new starting line (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)" }, { "field_name" : "new_lines", "type" : "IntegerType", "logical_type" : "ProductMetric", "desc" : "Number that gives the new amount of lines (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)" }, { "field_name" : "old_start", "type" : "IntegerType", "logical_type" : "ProductMetric", "desc" : "Number that gives the old starting line (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)" }, { "field_name" : "old_lines", "type" : "IntegerType", "logical_type" : "ProductMetric", "desc" : "Number that gives the old amount of lines (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)" }, { "field_name" : "content", "type" : "StringType", "logical_type" : "Text", "desc" : "Change content in unified diff format (without header), see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified" } ] }, { "collection_name" : "people", "desc" : "This collection contains all persons that worked within the project (e.g., contributing a commit)", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "field_name" : "email", "type" : "StringType", "logical_type" : "Other", "desc" : "Email address of the person" }, { "field_name" : "name", "type" : "StringType", "logical_type" : "Name", "desc" : "Name of the person" } ] }, { "collection_name" : "vcs_system", "desc" : "Collection that contains all vcs systems from which data was collected", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "field_name" : "url", "type" : "StringType", "logical_type" : "Location", "desc" : "URL of the vcs_system (e.g. https://github.com/smartshark/vcsSHARK)" }, { "field_name" : "last_updated", "type" : "DateType", "logical_type" : "Date", "desc" : "Date of the last parsing of this vcs_system " }, { "reference_to" : "project", "field_name" : "project_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID that links to the projects, to which this vcs system belongs" }, { "field_name" : "repository_type", "type" : "StringType", "logical_type" : "Type", "desc" : "Type of the repository (e.g., git)" } ] }, { "collection_name" : "tag", "desc" : "Collection that includes all information about different tags of the different vcs systems from which data was collected", "fields" : [ { "field_name" : "_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "Identifier of the document" }, { "field_name" : "name", "type" : "StringType", "logical_type" : "Name", "desc" : "Name of the tag" }, { "field_name" : "vcs_system_id", "type" : "ObjectIdType", "logical_type" : "OID", "desc" : "ObjectID that links to the vcs system to which this tag belongs" }, { "reference_to" : "commit", "field_name" : "commit_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID that links to the commit which this tag tags" }, { "reference_to" : "people", "field_name" : "tagger_id", "type" : "ObjectIdType", "logical_type" : "RID", "desc" : "ObjectID to the person that tagged the commit" }, { "field_name" : "message", "type" : "StringType", "logical_type" : "Text", "desc" : "If set, includes the tagging message" }, { "field_name" : "date_offset", "type" : "IntegerType", "logical_type" : "Offset", "desc" : "The offset (time zone) in which the tagger was, when he tagged the commit" }, { "field_name" : "date", "type" : "DateType", "logical_type" : "Date", "desc" : "The date at which the commit was tagged" } ] } ] }
]
